buildscript {
	ext {
		springBootVersion = "$springBootVersion"
	}
}

plugins {
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'war'
	id "org.sonarqube" version "2.7"
	id 'project-report'
	id "org.openapi.generator" version "4.3.1"
}

group = 'com.jane'
version = '0.1'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.name == 'log4j') {
			details.useTarget 'log4j:log4j:1.2.+'
		}
	}
}

allprojects {
	apply plugin: 'java'
	repositories {
		mavenCentral()
		maven { url = 'https://jitpack.io' }
	}
	dependencies {

		compileOnly "org.projectlombok:lombok:$lombokVersion"
		annotationProcessor "org.projectlombok:lombok:$lombokVersion"

		testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
		testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
	}
	test {
		useJUnitPlatform()
	}
	sourceSets {
		test {
			resources {
				srcDirs = ['src/test/resources', "${project.rootDir}/model/test"]
			}
		}
	}
}

dependencies {

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest'

	implementation('com.squareup.retrofit2:retrofit:2.4.0')
	implementation('com.squareup.retrofit2:converter-gson:2.4.0')

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}


	implementation(project(":${projectName}-domain"))
	implementation(project(":${projectName}-dao"))
	implementation(project(":${projectName}-service"))
	implementation(project(":${projectName}-service-impl"))
	implementation(project(":${projectName}-infrastructure"))
	implementation(project(":${projectName}-integration-impl"))
	implementation(project(":${projectName}-controller"))
	implementation fileTree(dir: "${project.rootDir}/model", include: ['*.jar'])
	implementation("javax.inject:javax.inject:1")
	testImplementation(project(":${projectName}-test-starter"))

	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.junit.jupiter:junit-jupiter'
}

configurations {
	all {
		exclude(group: "junit", module: "junit")
		exclude(group: "org.junit.vintage", module: "junit-vintage-engine")
	}
}
//task rebuild(type: MavenExec) {
//	goals 'spring-data-generator:repositories'
//}
htmlDependencyReport {
	projects = project.allprojects
}




